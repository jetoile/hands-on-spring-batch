<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <!-- Reader -->
    <!-- TODO : implementer/rÃ©utiliser le reader pour lire le CSV employee -->
    <!-- TODO: utiliser EmployeeFieldSetMapper afin de mapper correctement les dates -->
    <bean id="reader1" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="lineMapper" ref="cvsLineMapper"/>
        <property name="resource" value="#{jobParameters['datafileEmployees']}"/>
    </bean>

    <bean id="cvsLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                <property name="delimiter" value=","/>
                <property name="names">
                    <list>
                        <value>id</value>
                        <value>birthDate</value>
                        <value>firstName</value>
                        <value>lastName</value>
                        <value>gender</value>
                        <value>hireDate</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="fieldSetMapper">
            <bean class="handson.springbatch.reader.EmployeeFieldSetMapper">
                <property name="targetType" value="handson.springbatch.model.Employee"/>
            </bean>
        </property>
    </bean>


    <!-- Processor -->
    <bean id="processor1" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <!-- TODO : supprimer ce bean PassThroughItemProcessor -->
                <!-- TODO : ajouter vos propres ItemProcessor pour gere les regles de gestion -->
                <!--<bean class="org.springframework.batch.item.support.PassThroughItemProcessor"/>-->
                <bean class="handson.springbatch.processor.GenderProcessor"/>
                <bean class="handson.springbatch.processor.BirthDateProcessor"/>
            </list>
        </property>
    </bean>

    <!-- Writer -->
    <!-- TODO : implementer/reutiliser le writer pour ecrire dans la base en JDBC -->
    <!--<bean id="writer1" class="handson.springbatch.writer.NoopItemWriter">-->
    <bean id="writer1" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql"
                  value="INSERT INTO EMPLOYEES(id, birth_date, first_name, last_name, gender, hire_date) VALUES(:id, :birthDate, :firstName, :lastName, :gender, :hireDate)"/>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

</beans>